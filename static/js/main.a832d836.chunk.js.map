{"version":3,"sources":["components/filter/filter.js","components/table/table.js","components/app/app.js","index.js"],"names":["Filter","filterQuery","setFilterQuery","className","type","placeholder","value","onChange","event","target","Table","props","stats","sortQuery","setSortQuery","setOrder","order","captions","Object","keys","map","caption","idx","onClick","changeSort","statsList","stat","values","val","id","App","useState","setStats","sortCallbackMap","a","b","numbA","parseFloat","numbB","split","localeCompare","filteredStats","sort","filter","name","toLocaleLowerCase","includes","loading","table","length","useEffect","axios","get","promise","data","fetchData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGe,SAASA,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC3C,OACI,qBAAKC,UAAU,SAAf,SACI,uBACIC,KAAK,OACLC,YAAY,iBACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAASN,EAAeM,EAAMC,OAAOH,Y,MCyChDI,MAhDf,SAAgBC,GAAS,IAGjBC,EAKAD,EALAC,MACAC,EAIAF,EAJAE,UACAC,EAGAH,EAHAG,aACAC,EAEAJ,EAFAI,SACAC,EACAL,EADAK,MAgBEC,EAAWC,OAAOC,KAAKP,EAAM,IAAIQ,KAAI,SAACC,EAASC,GAAV,OAAgB,oBACvDC,QAAS,kBAdM,SAACF,GACbR,IAAcQ,GAQjBN,EAAS,GACTD,EAAaO,IAPLN,EADS,IAAVC,GACW,EAED,GASJQ,CAAWH,IAD+B,SAGlDA,GADAC,MAKHG,EAAYb,EAAMQ,KAAI,SAAAM,GAAI,OAAG,6BAC9BR,OAAOS,OAAOD,GAAMN,KAAI,SAACQ,EAAKN,GAAN,OAAY,mCAA2BM,EAA3B,MAASN,EAAMI,EAAKG,QADjBH,EAAKG,OAIjD,OACI,qBAAK1B,UAAU,QAAf,SACQ,kCACI,gCACA,6BAAMc,MAEN,gCACEQ,U,uBCyCPK,MA/Ef,WAAgB,IAAD,EAEaC,mBAAS,MAFtB,mBAENnB,EAFM,KAECoB,EAFD,OAGaD,mBAAS,GAHtB,mBAGNf,EAHM,KAGCD,EAHD,OAIqBgB,mBAAU,MAJ/B,mBAINlB,EAJM,KAIKC,EAJL,OAKyBiB,mBAAU,IALnC,mBAKN9B,EALM,KAKOC,EALP,KAOP+B,EACgB,SAACC,EAAGC,GACd,IAAMC,EAAQC,WAAWH,EAAErB,IACrByB,EAAQD,WAAWF,EAAEtB,IAC3B,OAAGuB,EAAQE,EACQ,EAARtB,EACDoB,EAAQE,GACG,EAAVtB,EAEA,GATjBiB,EAWgB,SAACC,EAAGC,GACd,OAAa,IAAVnB,EACQkB,EAAErB,GAAW0B,MAAM,KAAK,GAAGC,cAAcL,EAAEtB,GAAW0B,MAAM,KAAK,IAErEJ,EAAEtB,GAAW0B,MAAM,KAAK,GAAGC,cAAcN,EAAErB,GAAW0B,MAAM,KAAK,KAoB9EE,EAAgB7B,GAbA,SAAdC,EACc,YAAID,GAAO8B,KAAKT,GAEhB,YAAIrB,GAAO8B,KAAKT,IAMVU,QAAO,SAAAjB,GAAI,OAAIA,EAAKkB,KAAKL,MAAM,KAAK,GAAGM,oBAAoBC,SAAS7C,EAAY4C,wBAI3D,KAC3CE,EAAWnC,EAA4B,KAArB,4CAClBoC,EAAQP,GAAiBA,EAAcQ,OACzC,cAAC,EAAD,CAAOrC,MAAO6B,EACP5B,UAAWA,EACXC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,IACV,KAUR,OARAkC,qBAAU,WAAI,4CACR,4BAAAhB,EAAA,sEAC0BiB,IAAMC,IAAI,8CADpC,OACUC,EADV,OAEIrB,EAASqB,EAAQC,MAFrB,4CADQ,uBAAC,WAAD,wBAKRC,KACH,IAGD,sBAAKpD,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACI,6CAEF,iCACI,cAACH,EAAD,CACIC,YAAaA,EACbC,eAAgBA,IAElB6C,EACAC,KAEN,+BC3ERQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a832d836.chunk.js","sourcesContent":["import React from 'react';\r\nimport './filter.css';\r\n\r\nexport default function Filter( { filterQuery, setFilterQuery} ) {\r\n    return (\r\n        <div className=\"filter\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"search by name\"\r\n                value={filterQuery}\r\n                onChange={(event)=>setFilterQuery(event.target.value)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './table.css';\r\n\r\nfunction Table( props ) {\r\n\r\n    const {\r\n        stats,\r\n        sortQuery,\r\n        setSortQuery,\r\n        setOrder,\r\n        order\r\n    } = props;\r\n\r\n    const changeSort = (caption) => {\r\n        if(sortQuery === caption) {\r\n            if(order === 1) {\r\n                setOrder(-1);\r\n            }else {\r\n                setOrder(1);\r\n            }\r\n            return;\r\n        }\r\n        setOrder(1);\r\n        setSortQuery(caption);\r\n    };\r\n\r\n    const captions = Object.keys(stats[0]).map((caption, idx)=><th\r\n        onClick={()=>changeSort(caption)}\r\n        key={idx}>\r\n            {caption}\r\n        </th>\r\n    );\r\n\r\n    const statsList = stats.map(stat =><tr key={stat.id}>\r\n        {Object.values(stat).map((val, idx)=><td key={idx + stat.id}> { val } </td>) }\r\n    </tr>);\r\n\r\n    return (\r\n        <div className=\"table\">\r\n                <table>\r\n                    <thead>\r\n                    <tr>{ captions }</tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { statsList }\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React, {useEffect, useState } from 'react';\nimport Filter from '../filter/filter';\nimport Table from '../table/table';\nimport axios from 'axios';\nimport './app.css';\n\nfunction App() {\n\n  const [stats, setStats] = useState(null);\n  const [order, setOrder] = useState(1);\n  const [sortQuery, setSortQuery] = useState( 'id' );\n  const [filterQuery, setFilterQuery] = useState( '' );\n\n  const sortCallbackMap = {\n          sort_numbers: (a, b) => {\n              const numbA = parseFloat(a[sortQuery]);\n              const numbB = parseFloat(b[sortQuery]);\n              if(numbA > numbB){\n                  return order * 1\n              }else if (numbA < numbB) {\n                  return order * (-1)\n              }else\n                  return 0\n          },\n          sort_strings: (a, b) => {\n              if(order === 1) {\n                  return a[sortQuery].split(' ')[1].localeCompare(b[sortQuery].split(' ')[1]);\n              }\n              return b[sortQuery].split(' ')[1].localeCompare(a[sortQuery].split(' ')[1]);\n          }\n      };\n\n  const getSortedStats = ()=>{\n      let sortedStats;\n\n      if (sortQuery === 'name') {\n          sortedStats = [...stats].sort(sortCallbackMap['sort_strings']);\n      } else {\n          sortedStats = [...stats].sort(sortCallbackMap['sort_numbers']);\n      }\n      return sortedStats;\n  };\n\n  const getFilteredStats = ()=>{\n      return getSortedStats().filter(stat => stat.name.split(' ')[1].toLocaleLowerCase().includes(filterQuery.toLocaleLowerCase()));\n  };\n\n\n  const filteredStats = stats? getFilteredStats(): null;\n  const loading = !stats? <h2>Loading...</h2>: null;\n  const table = filteredStats && filteredStats.length?\n      <Table stats={filteredStats}\n             sortQuery={sortQuery}\n             setSortQuery={setSortQuery}\n             setOrder={setOrder}\n             order={order}\n      />: null;\n\n  useEffect(()=>{\n        async function fetchData() {\n            const promise = await axios.get('https://lb-trainee-app.herokuapp.com/stats');\n            setStats(promise.data);\n        }\n        fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <h1>Test task</h1>\n      </header>\n        <main>\n            <Filter\n                filterQuery={filterQuery}\n                setFilterQuery={setFilterQuery}\n            />\n            { loading }\n            { table }\n        </main>\n        <footer>\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}